#
# This ini file runs Telnet sessions on the NClients network, using
# TelnetApp+TCPGenericSrvApp.
#
# See also fileTransfer.ini and basicHTTP.ini for different kinds of
# network traffic.
#

[Config inet__inet]
description = "inet_TCP <---> inet_TCP"
# setting TCP stack implementation
**.server*.tcpType = "TCP"
**.client*.tcpType = "TCP"
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"

[Config inet_old__inet_old]
description = "TCP_old <---> TCP_old"
# setting TCP stack implementation
**.server*.tcpType = "TCP_old"
**.client*.tcpType = "TCP_old"
**.tcp.sendQueueClass = "tcp_old::TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "tcp_old::TCPMsgBasedRcvQueue"

[Config lwip__lwip]
description = "TCP_lwip <---> TCP_lwip"
# setting TCP stack implementation
**.server*.tcpType = "TCP_lwip"
**.client*.tcpType = "TCP_lwip"
**.tcp.sendQueueClass = "TcpLwipMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TcpLwipMsgBasedRcvQueue"

[Config lwip__inet]
description = "TCP_lwip <---> inet_TCP"
# setting TCP stack implementation
**.server*.tcpType = "TCP_lwip"
**.client*.tcpType = "TCP"
**.tcp.server*.sendQueueClass = "TcpLwipMsgBasedSendQueue"
**.tcp.server*.receiveQueueClass = "TcpLwipMsgBasedRcvQueue"
**.client*.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.client*.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"

[Config inet__lwip]
description = "inet_TCP <---> TCP_lwip"
# setting TCP stack implementation
**.server*.tcpType = "TCP"
**.client*.tcpType = "TCP_lwip"
**.server*.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.server*.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.client*.sendQueueClass = "TcpLwipMsgBasedSendQueue"
**.tcp.client*.receiveQueueClass = "TcpLwipMsgBasedRcvQueue"

[General]
network = NClients
debug-on-errors = true
tkenv-plugin-path = ../../../etc/plugins

# number of client computers
*.n = 4

# tcp apps
**.cli[*].numTcpApps = 1
**.cli[*].tcpAppType = "TelnetApp"
**.cli[*].tcpApp[0].address = ""
**.cli[*].tcpApp[0].port = -1
**.cli[*].tcpApp[0].connectAddress = "srv"
**.cli[*].tcpApp[0].connectPort = 1000

**.cli[*].tcpApp[0].startTime = exponential(5s)
**.cli[*].tcpApp[0].numCommands = exponential(10)
**.cli[*].tcpApp[0].commandLength = exponential(10B)
**.cli[*].tcpApp[0].keyPressDelay = exponential(0.1s)
**.cli[*].tcpApp[0].commandOutputLength = exponential(40B)
**.cli[*].tcpApp[0].thinkTime = truncnormal(2s,3s)
**.cli[*].tcpApp[0].idleInterval = truncnormal(3600s,1200s)
**.cli[*].tcpApp[0].reconnectInterval = 30s

**.srv.numTcpApps = 1
**.srv.tcpAppType = "TCPGenericSrvApp"
**.srv.tcpApp[0].address = ""
**.srv.tcpApp[0].port = 1000
**.srv.tcpApp[0].replyDelay = 0

# tcp settings

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10    # in routers

